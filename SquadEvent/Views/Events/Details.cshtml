@model SquadEvent.Models.EventDetailsViewModel

@{
    ViewData["Title"] = Model.Match.Name;
}

@section Title { <h1><span>@ViewData["Title"]</span></h1> }

@if (Model.MatchUser != null)
{
    <div class="alert alert-secondary" role="alert">
        <h4 class="alert-heading">Inscription</h4>
        @if (Model.MatchUser.Side == null)
        {
            <p>Vous êtes inscrit en liste d'attente.</p>
        }
        else
        {
            <p>Vous êtes bien inscrit.</p>
        }
        <p><a class="btn btn-secondary" asp-controller="@ControllersName.Events" asp-action="Subscription" asp-route-id="@Model.Match.MatchID">Voir l'inscription</a></p>
    </div>
}

<div>
    @Html.Raw(Model.Match.Description)
</div>

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Match.Date)
    </dt>
    <dd class="col-sm-10">
        <i class="far fa-clock"></i> @Html.DisplayFor(model => model.Match.Date) à @Html.DisplayFor(model => model.Match.StartTime)
    </dd>
</dl>


@if (Model.MatchUser != null && Model.MatchUser.Side == null)
{


    <form asp-action="SubscriptionSide" asp-route-id="@Model.Match.MatchID">
        <div>
            <div class="row mb-4">
                @foreach (var side in Model.Match.Sides)
                {
                    <div class="col-md-6">
                        <h3 class="text-center">@side.Name</h3>
                        <p class="text-center text-muted">@Html.DisplayFor(model => side.SquadsPolicy)</p>

                        @if ((side.Users?.Count() ?? 0) >= side.MaxUsersCount)
                        {
                            <p class="text-center">
                                <button class="btn btn-outline-secondary disabled" disabled>Rejoindre @side.Name</button>
                            </p>
                            <p class="text-center text-muted">Nombre maximum d'inscrits atteint</p>
                        }
                        else
                        {
                            <p class="text-center">
                                <button class="btn btn-outline-success" name="matchSideID" value="@side.MatchSideID">Rejoindre @side.Name</button>
                            </p>
                        }
                    </div>
                }
            </div>
        </div>
    </form>
}
else
{
    <div>
        <div class="row mb-4">
            @foreach (var side in Model.Match.Sides)
            {
                <div class="col-md-6">
                    <h3 class="text-center">@side.Name</h3>
                    <p class="text-center text-muted">@Html.DisplayFor(model => side.SquadsPolicy)</p>
                    <p class="text-center">
                        @if (Model.MatchUser != null)
                        {
                            @if (Model.MatchUser.Side == side)
                            {
                                <a class="btn btn-success" asp-action="Subscription" asp-route-id="@Model.Match.MatchID" asp-route-matchSideID="@side.MatchSideID">Inscrit coté @side.Name</a>
                            }
                            else
                            {
                                <span class="text-muted">Aller dans votre inscription pour changer de coté.</span>
                            }
                        }
                        else if ((side.Users?.Count() ?? 0) >= side.MaxUsersCount)
                        {
                            <a class="btn btn-outline-secondary" asp-action="Subscription" asp-route-id="@Model.Match.MatchID">S'inscrire et rejoindre @side.Name</a>
                        <p class="text-center text-muted">Nombre maximum d'inscrits atteint, vous pouvez tout de même vous inscrire en liste d'attente.</p>
                    }
                    else
                    {
                        <a class="btn btn-outline-success" asp-action="Subscription" asp-route-id="@Model.Match.MatchID" asp-route-matchSideID="@side.MatchSideID">S'inscrire et rejoindre @side.Name</a>
                    }
                        </p>
                    </div>
                }
        </div>
    </div>
}

<div>
    @foreach (var round in Model.Match.Rounds)
    {
        <div class="title" style="@ViewHelper.Style(round.GameMap)">
            <a name="round-@round.RoundID"></a>
            <p>
                <span>
                    Carte
                    @if (Model.Match.Rounds.Count > 1)
                    {
                        @:# @round.Number
                    }
                </span>
            </p>
            <h2>
                <span>@(round.GameMap?.Name ?? "Destination inconnue")</span>
            </h2>
        </div>

        <div class="row">
            @foreach (var side in round.Sides)
            {
                <div class="col-md-6">
                    <h4 class="text-center"><img src="@ViewHelper.Icon(side.Faction)" alt="" width="64" /><br />@Html.DisplayFor(m => @side.Faction)<br />@side.MatchSide.Name</h4>
                    @if (Model.MatchUser?.Side == side.MatchSide)
                    {
                        <div class="accordion mb-4" id="squads-@side.RoundSideID">
                            @foreach (var squad in side.Squads)
                            {
                                var hasLabels = squad.Slots.Any(s => !string.IsNullOrEmpty(s.Label));
                                var freeSlots = squad.Slots.Count(s => s.AssignedUser == null);

                                <div class="card">
                                    <div class="card-header" id="squad-name-@squad.RoundSquadID">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#squad-@squad.RoundSquadID" aria-expanded="true" aria-controls="squad-@squad.RoundSquadID">
                                                <span class="badge badge-dark">@Html.DisplayFor(model => squad.Number)</span> @Html.DisplayFor(model => squad.Name)
                                                @if (freeSlots > 0)
                                                {
                                                    <span class="badge badge-success">@freeSlots place(s) libre(s)</span>
                                                }
                                            </button>
                                        </h5>
                                    </div>

                                    <div id="squad-@squad.RoundSquadID" class="collapse" aria-labelledby="squad-name-@squad.RoundSquadID" data-parent="#squads-@side.RoundSideID">
                                        <div class="card-body p-0">

                                            <table class="table m-0">
                                                <colgroup>
                                                    <col width="80" />
                                                    <col width="30" />
                                                    @if (hasLabels)
                                                    {
                                                        <col width="150" />
                                                    }
                                                </colgroup>
                                                @foreach (var slot in squad.Slots)
                                                {
                                                    <tr>
                                                        <td class="pl-4"><span class="badge badge-secondary @slot.Role">@Html.DisplayFor(m => slot.Role)</span></td>
                                                        <td><img src="@ViewHelper.Icon(slot.AssignedKit)" title="@Html.DisplayFor(m => slot.AssignedKit)" height="24" /></td>
                                                        @if (hasLabels)
                                                        {
                                                            <td>@Html.DisplayFor(m => slot.Label)</td>
                                                        }
                                                        <td>
                                                            @if (slot.AssignedUser != null)
                                                            {
                                                                <span>@Html.DisplayFor(m => slot.AssignedUser.User.Name)</span>
                                                            }
                                                            else
                                                            {
                                                                <a class="badge badge-success" asp-action="Subscription" asp-route-id="@Model.Match.MatchID">Libre</a>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="accordion  mb-4" id="squads-@side.RoundSideID">
                            @foreach (var squad in side.Squads)
                            {
                                <div class="card">
                                    <div class="card-header" id="squad-name-@squad.RoundSquadID">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#squad-@squad.RoundSquadID" aria-expanded="true" aria-controls="squad-@squad.RoundSquadID">
                                                <span class="badge badge-dark">@Html.DisplayFor(model => squad.Number)</span> @Html.DisplayFor(model => squad.Name)
                                            </button>
                                        </h5>
                                    </div>
                                    <div id="squad-@squad.RoundSquadID" class="collapse" aria-labelledby="squad-name-@squad.RoundSquadID" data-parent="#squads-@side.RoundSideID">
                                        <div class="card-body">
                                            <p class="text-muted">Le détail des squads est affiché uniquement aux inscrits du même coté.</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

<div class="title players">
    <h2><span>Inscrits</span></h2>
</div>

<div>
    <div class="row mb-4">
        @foreach (var side in Model.Match.Sides)
        {
            <div class="col-md-6">
                <h3 class="text-center">@side.Name</h3>
                <p>@(side.Users?.Count() ?? 0) inscrits</p>
                <ul class="list-group">
                    @foreach (var user in side.Users ?? new List<SquadEvent.Entities.MatchUser>())
                    {
                        <li class="list-group-item">
                            @user.User.Name
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
</div>

<div>
    <h2><a name="unassigned"></a>Liste d'attente</h2>
    <hr />
    <p>@Model.Match.Users.Count(u => u.MatchSideID == null) inscrits</p>

    <ul class="list-group">
        @foreach (var user in Model.Match.Users.Where(u => u.MatchSideID == null))
        {
            <li class="list-group-item">
                @user.User.Name
            </li>
        }
    </ul>
</div>